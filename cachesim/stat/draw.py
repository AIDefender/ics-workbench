import os
import matplotlib.pyplot as plt
import numpy as np 
data = {10: [[0, 1, 2, 3], [0.80527, 0.9484363333333333, 0.9865866666666667, 0.9875623333333333]], 11: [[0, 2, 1, 3, 4], [0.856917, 0.9923226666666668, 0.9914553333333332, 0.9926083333333334, 0.9926913333333333]], 9: [[0, 1, 2], [0.653268, 0.8658836666666666, 0.9749523333333334]], 7: [[0], [0.3743830000000001]], 12: [[0, 1, 2, 3, 4, 5], [0.99239, 0.9950266666666666, 0.9951626666666668, 0.9953116666666667, 0.9953056666666665, 0.9953626666666667]], 13: [[0, 1, 4, 2, 5, 3, 6], [0.994053, 0.9968940000000001, 0.9969239999999999, 0.9969613333333333, 0.9968136666666666, 0.9968793333333333, 0.9968303333333334]], 8: [[0, 1], [0.539426, 0.7301943333333334]], 15: [[0, 1, 6, 2, 3, 4, 7, 5], [0.997722, 0.9977813333333333, 0.997793, 0.9977893333333334, 0.9977976666666667, 0.9977893333333333, 0.9977373333333333, 0.9978046666666666]], 14: [[2, 3, 4, 0, 5, 1, 6, 7], [0.9975403333333333, 0.9975356666666667, 0.9974863333333334, 0.9972600000000001, 0.9974599999999999, 0.9973896666666665, 0.9974516666666666, 0.997424]], 16: [[4, 5, 6, 0, 1, 7, 2, 3], [0.9979206666666668, 0.997919, 0.9979323333333333, 0.9978950000000001, 0.9979633333333333, 0.9979173333333334, 0.9979290000000001, 0.997942]], 18: [[0, 1, 2, 3, 6, 4, 5, 7], [0.998278, 0.9982519999999999, 0.9982323333333333, 0.998262, 0.998239, 0.9982190000000001, 0.9982566666666667, 0.9982633333333334]], 17: [[2, 3, 4, 5, 6, 0, 1, 7], [0.9980683333333333, 0.9980486666666666, 0.998034, 0.998075, 0.998021, 0.997983, 0.9980813333333334, 0.9980569999999999]], 19: [[4, 5, 6, 0, 1, 2, 7, 3], [0.9985766666666667, 0.9986063333333334, 0.9985683333333334, 0.998446, 0.9984883333333334, 0.998547, 0.9985779999999999, 0.9985780000000001]], 20: [[2, 3, 4, 5, 6, 0, 7, 1], [0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998662, 0.998691, 0.9986836666666666]], 21: [[0, 6, 1, 2, 7, 3, 4, 5], [0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691]], 22: [[4, 5, 6, 0, 1, 7, 2, 3], [0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691]], 23: [[2, 3, 4, 5, 0, 6, 1, 7], [0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691]], 24: [[0, 1, 2, 6, 3, 7, 4, 5], [0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691]], 25: [[4, 5, 0, 6, 1, 7, 2, 3], [0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691]], 26: [[2, 3, 4, 5, 0, 6, 1, 7], [0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691]], 27: [[0, 1, 6, 2, 7, 3, 4, 5], [0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691]], 28: [[4, 5, 6, 0, 1, 7, 2, 3], [0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691]], 29: [[2, 3, 4, 5, 0, 6, 1, 7], [0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691, 0.998691]]}


def fmt_and_show(mod = 0):
    if mod==0:
        plt.xlabel("Total size width")  
    else: 
        plt.xlabel("Associativity width")

    plt.ylabel("Cache hit rate") 
    plt.legend(loc="lower right")
    if mod == 0:
        plt.title("Relation between cache size and cache hit rate")  
    else:
        plt.title("Relation between associativity width and cache hit rate")
    plt.show()



# for j,i in enumerate(sorted(list(data.keys()))):
#     plt.scatter(data[i][0],data[i][1],label = "associativity width {}".format(i))
#     if ((j+1)%4==0):
#         fmt_and_show()
# fmt_and_show()
for j,i in enumerate(sorted(list(data.keys()))):
    plt.scatter(data[i][0],data[i][1],label = "total size width {}".format(i))
    if ((j+1)%8==0):
        fmt_and_show(1)
fmt_and_show(1)
